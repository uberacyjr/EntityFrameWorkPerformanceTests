

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Configuration file:     "Project.Domain.Test\App.config"
//     Connection String Name: "ProjectConnection"
//     Connection String:      "Server=localhost\SQLEXPRESS;Database=Cargo;Trusted_Connection=true"
// ------------------------------------------------------------------------------------------------
// Database Edition       : Express Edition (64-bit)
// Database Engine Edition: Express

// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace Project.Domain.Test.BD
{
    using System.Linq;

    #region Unit of work

    public interface IMyDbContext : System.IDisposable
    {
        System.Data.Entity.DbSet<Action> Actions { get; set; } // Actions
        System.Data.Entity.DbSet<Aeroporto> Aeroportoes { get; set; } // Aeroportos
        System.Data.Entity.DbSet<AgendaColeta> AgendaColetas { get; set; } // AgendaColetas
        System.Data.Entity.DbSet<Agente> Agentes { get; set; } // Agentes
        System.Data.Entity.DbSet<Carga> Cargas { get; set; } // Cargas
        System.Data.Entity.DbSet<Cep> Ceps { get; set; } // Ceps
        System.Data.Entity.DbSet<ContasCorrente> ContasCorrentes { get; set; } // ContasCorrente
        System.Data.Entity.DbSet<Contrato> Contratoes { get; set; } // Contratos
        System.Data.Entity.DbSet<Endereco> Enderecoes { get; set; } // Enderecoes
        System.Data.Entity.DbSet<EnderecosConsolidado> EnderecosConsolidadoes { get; set; } // EnderecosConsolidados
        System.Data.Entity.DbSet<Localidade> Localidades { get; set; } // Localidades
        System.Data.Entity.DbSet<Municipio> Municipios { get; set; } // Municipios
        System.Data.Entity.DbSet<Perfi> Perfis { get; set; } // Perfis
        System.Data.Entity.DbSet<PerfisTipo> PerfisTipoes { get; set; } // PerfisTipo
        System.Data.Entity.DbSet<Pontual_Pessoa> Pontual_Pessoas { get; set; } // Pessoas
        System.Data.Entity.DbSet<SolicitacoesDeColeta> SolicitacoesDeColetas { get; set; } // SolicitacoesDeColeta
        System.Data.Entity.DbSet<StatusTipos> StatusTipos { get; set; } // StatusTipos
        System.Data.Entity.DbSet<Telefone> Telefones { get; set; } // Telefones
        System.Data.Entity.DbSet<TicketStatu> TicketStatus { get; set; } // TicketStatus
        System.Data.Entity.DbSet<TipoServico> TipoServicoes { get; set; } // TipoServicos
        System.Data.Entity.DbSet<Uf> Ufs { get; set; } // Ufs
        System.Data.Entity.DbSet<Usuario> Usuarios { get; set; } // Usuarios
        System.Data.Entity.DbSet<UsuariosRh> UsuariosRhs { get; set; } // UsuariosRH
        System.Data.Entity.DbSet<UsuariosStatusRh> UsuariosStatusRhs { get; set; } // UsuariosStatusRH

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
    }

    #endregion

    #region Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class MyDbContext : System.Data.Entity.DbContext, IMyDbContext
    {
        public System.Data.Entity.DbSet<Action> Actions { get; set; } // Actions
        public System.Data.Entity.DbSet<Aeroporto> Aeroportoes { get; set; } // Aeroportos
        public System.Data.Entity.DbSet<AgendaColeta> AgendaColetas { get; set; } // AgendaColetas
        public System.Data.Entity.DbSet<Agente> Agentes { get; set; } // Agentes
        public System.Data.Entity.DbSet<Carga> Cargas { get; set; } // Cargas
        public System.Data.Entity.DbSet<Cep> Ceps { get; set; } // Ceps
        public System.Data.Entity.DbSet<ContasCorrente> ContasCorrentes { get; set; } // ContasCorrente
        public System.Data.Entity.DbSet<Contrato> Contratoes { get; set; } // Contratos
        public System.Data.Entity.DbSet<Endereco> Enderecoes { get; set; } // Enderecoes
        public System.Data.Entity.DbSet<EnderecosConsolidado> EnderecosConsolidadoes { get; set; } // EnderecosConsolidados
        public System.Data.Entity.DbSet<Localidade> Localidades { get; set; } // Localidades
        public System.Data.Entity.DbSet<Municipio> Municipios { get; set; } // Municipios
        public System.Data.Entity.DbSet<Perfi> Perfis { get; set; } // Perfis
        public System.Data.Entity.DbSet<PerfisTipo> PerfisTipoes { get; set; } // PerfisTipo
        public System.Data.Entity.DbSet<Pontual_Pessoa> Pontual_Pessoas { get; set; } // Pessoas
        public System.Data.Entity.DbSet<SolicitacoesDeColeta> SolicitacoesDeColetas { get; set; } // SolicitacoesDeColeta
        public System.Data.Entity.DbSet<StatusTipos> StatusTipos { get; set; } // StatusTipos
        public System.Data.Entity.DbSet<Telefone> Telefones { get; set; } // Telefones
        public System.Data.Entity.DbSet<TicketStatu> TicketStatus { get; set; } // TicketStatus
        public System.Data.Entity.DbSet<TipoServico> TipoServicoes { get; set; } // TipoServicos
        public System.Data.Entity.DbSet<Uf> Ufs { get; set; } // Ufs
        public System.Data.Entity.DbSet<Usuario> Usuarios { get; set; } // Usuarios
        public System.Data.Entity.DbSet<UsuariosRh> UsuariosRhs { get; set; } // UsuariosRH
        public System.Data.Entity.DbSet<UsuariosStatusRh> UsuariosStatusRhs { get; set; } // UsuariosStatusRH

        static MyDbContext()
        {
            System.Data.Entity.Database.SetInitializer<MyDbContext>(null);
        }

        public MyDbContext()
            : base("Name=ProjectConnection")
        {
        }

        public MyDbContext(string connectionString)
            : base(connectionString)
        {
        }

        public MyDbContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
        }

        public MyDbContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
        }

        public MyDbContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new ActionConfiguration());
            modelBuilder.Configurations.Add(new AeroportoConfiguration());
            modelBuilder.Configurations.Add(new AgendaColetaConfiguration());
            modelBuilder.Configurations.Add(new AgenteConfiguration());
            modelBuilder.Configurations.Add(new CargaConfiguration());
            modelBuilder.Configurations.Add(new CepConfiguration());
            modelBuilder.Configurations.Add(new ContasCorrenteConfiguration());
            modelBuilder.Configurations.Add(new ContratoConfiguration());
            modelBuilder.Configurations.Add(new EnderecoConfiguration());
            modelBuilder.Configurations.Add(new EnderecosConsolidadoConfiguration());
            modelBuilder.Configurations.Add(new LocalidadeConfiguration());
            modelBuilder.Configurations.Add(new MunicipioConfiguration());
            modelBuilder.Configurations.Add(new PerfiConfiguration());
            modelBuilder.Configurations.Add(new PerfisTipoConfiguration());
            modelBuilder.Configurations.Add(new Pontual_PessoaConfiguration());
            modelBuilder.Configurations.Add(new SolicitacoesDeColetaConfiguration());
            modelBuilder.Configurations.Add(new StatusTiposConfiguration());
            modelBuilder.Configurations.Add(new TelefoneConfiguration());
            modelBuilder.Configurations.Add(new TicketStatuConfiguration());
            modelBuilder.Configurations.Add(new TipoServicoConfiguration());
            modelBuilder.Configurations.Add(new UfConfiguration());
            modelBuilder.Configurations.Add(new UsuarioConfiguration());
            modelBuilder.Configurations.Add(new UsuariosRhConfiguration());
            modelBuilder.Configurations.Add(new UsuariosStatusRhConfiguration());
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new ActionConfiguration(schema));
            modelBuilder.Configurations.Add(new AeroportoConfiguration(schema));
            modelBuilder.Configurations.Add(new AgendaColetaConfiguration(schema));
            modelBuilder.Configurations.Add(new AgenteConfiguration(schema));
            modelBuilder.Configurations.Add(new CargaConfiguration(schema));
            modelBuilder.Configurations.Add(new CepConfiguration(schema));
            modelBuilder.Configurations.Add(new ContasCorrenteConfiguration(schema));
            modelBuilder.Configurations.Add(new ContratoConfiguration(schema));
            modelBuilder.Configurations.Add(new EnderecoConfiguration(schema));
            modelBuilder.Configurations.Add(new EnderecosConsolidadoConfiguration(schema));
            modelBuilder.Configurations.Add(new LocalidadeConfiguration(schema));
            modelBuilder.Configurations.Add(new MunicipioConfiguration(schema));
            modelBuilder.Configurations.Add(new PerfiConfiguration(schema));
            modelBuilder.Configurations.Add(new PerfisTipoConfiguration(schema));
            modelBuilder.Configurations.Add(new Pontual_PessoaConfiguration(schema));
            modelBuilder.Configurations.Add(new SolicitacoesDeColetaConfiguration(schema));
            modelBuilder.Configurations.Add(new StatusTiposConfiguration(schema));
            modelBuilder.Configurations.Add(new TelefoneConfiguration(schema));
            modelBuilder.Configurations.Add(new TicketStatuConfiguration(schema));
            modelBuilder.Configurations.Add(new TipoServicoConfiguration(schema));
            modelBuilder.Configurations.Add(new UfConfiguration(schema));
            modelBuilder.Configurations.Add(new UsuarioConfiguration(schema));
            modelBuilder.Configurations.Add(new UsuariosRhConfiguration(schema));
            modelBuilder.Configurations.Add(new UsuariosStatusRhConfiguration(schema));
            return modelBuilder;
        }
    }
    #endregion

    #region Fake Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class FakeMyDbContext : IMyDbContext
    {
        public System.Data.Entity.DbSet<Action> Actions { get; set; }
        public System.Data.Entity.DbSet<Aeroporto> Aeroportoes { get; set; }
        public System.Data.Entity.DbSet<AgendaColeta> AgendaColetas { get; set; }
        public System.Data.Entity.DbSet<Agente> Agentes { get; set; }
        public System.Data.Entity.DbSet<Carga> Cargas { get; set; }
        public System.Data.Entity.DbSet<Cep> Ceps { get; set; }
        public System.Data.Entity.DbSet<ContasCorrente> ContasCorrentes { get; set; }
        public System.Data.Entity.DbSet<Contrato> Contratoes { get; set; }
        public System.Data.Entity.DbSet<Endereco> Enderecoes { get; set; }
        public System.Data.Entity.DbSet<EnderecosConsolidado> EnderecosConsolidadoes { get; set; }
        public System.Data.Entity.DbSet<Localidade> Localidades { get; set; }
        public System.Data.Entity.DbSet<Municipio> Municipios { get; set; }
        public System.Data.Entity.DbSet<Perfi> Perfis { get; set; }
        public System.Data.Entity.DbSet<PerfisTipo> PerfisTipoes { get; set; }
        public System.Data.Entity.DbSet<Pontual_Pessoa> Pontual_Pessoas { get; set; }
        public System.Data.Entity.DbSet<SolicitacoesDeColeta> SolicitacoesDeColetas { get; set; }
        public System.Data.Entity.DbSet<StatusTipos> StatusTipos { get; set; }
        public System.Data.Entity.DbSet<Telefone> Telefones { get; set; }
        public System.Data.Entity.DbSet<TicketStatu> TicketStatus { get; set; }
        public System.Data.Entity.DbSet<TipoServico> TipoServicoes { get; set; }
        public System.Data.Entity.DbSet<Uf> Ufs { get; set; }
        public System.Data.Entity.DbSet<Usuario> Usuarios { get; set; }
        public System.Data.Entity.DbSet<UsuariosRh> UsuariosRhs { get; set; }
        public System.Data.Entity.DbSet<UsuariosStatusRh> UsuariosStatusRhs { get; set; }

        public FakeMyDbContext()
        {
            Actions = new FakeDbSet<Action>("ActionId");
            Aeroportoes = new FakeDbSet<Aeroporto>("AeroportoId");
            AgendaColetas = new FakeDbSet<AgendaColeta>("Id");
            Agentes = new FakeDbSet<Agente>("AgenteId");
            Cargas = new FakeDbSet<Carga>("Id");
            Ceps = new FakeDbSet<Cep>("Id");
            ContasCorrentes = new FakeDbSet<ContasCorrente>("ContratoContaId");
            Contratoes = new FakeDbSet<Contrato>("Id");
            Enderecoes = new FakeDbSet<Endereco>("Id");
            EnderecosConsolidadoes = new FakeDbSet<EnderecosConsolidado>("Id");
            Localidades = new FakeDbSet<Localidade>("LocalidadeId");
            Municipios = new FakeDbSet<Municipio>("MunicipioId");
            Perfis = new FakeDbSet<Perfi>("PerfilId");
            PerfisTipoes = new FakeDbSet<PerfisTipo>("PerfilTipoId");
            Pontual_Pessoas = new FakeDbSet<Pontual_Pessoa>("Id");
            SolicitacoesDeColetas = new FakeDbSet<SolicitacoesDeColeta>("Id");
            StatusTipos = new FakeDbSet<StatusTipos>("Id");
            Telefones = new FakeDbSet<Telefone>("Id");
            TicketStatus = new FakeDbSet<TicketStatu>("TicketStatusId");
            TipoServicoes = new FakeDbSet<TipoServico>("TipoServicoId");
            Ufs = new FakeDbSet<Uf>("UfId");
            Usuarios = new FakeDbSet<Usuario>("UsuarioId");
            UsuariosRhs = new FakeDbSet<UsuariosRh>("UsuarioRhid");
            UsuariosStatusRhs = new FakeDbSet<UsuariosStatusRh>("UsuarioStatusRhId");
        }

        public int SaveChangesCount { get; private set; }
        public int SaveChanges()
        {
            ++SaveChangesCount;
            return 1;
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync()
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1);
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken)
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1, cancellationToken);
        }

        protected virtual void Dispose(bool disposing)
        {
        }

        public void Dispose()
        {
            Dispose(true);
        }
    }

    // ************************************************************************
    // Fake DbSet
    // Implementing Find:
    //      The Find method is difficult to implement in a generic fashion. If
    //      you need to test code that makes use of the Find method it is
    //      easiest to create a test DbSet for each of the entity types that
    //      need to support find. You can then write logic to find that
    //      particular type of entity, as shown below:
    //      public class FakeBlogDbSet : FakeDbSet<Blog>
    //      {
    //          public override Blog Find(params object[] keyValues)
    //          {
    //              var id = (int) keyValues.Single();
    //              return this.SingleOrDefault(b => b.BlogId == id);
    //          }
    //      }
    //      Read more about it here: https://msdn.microsoft.com/en-us/data/dn314431.aspx
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class FakeDbSet<TEntity> : System.Data.Entity.DbSet<TEntity>, IQueryable, System.Collections.Generic.IEnumerable<TEntity>, System.Data.Entity.Infrastructure.IDbAsyncEnumerable<TEntity> where TEntity : class
    {
        private readonly System.Reflection.PropertyInfo[] _primaryKeys;
        private readonly System.Collections.ObjectModel.ObservableCollection<TEntity> _data;
        private readonly IQueryable _query;

        public FakeDbSet()
        {
            _data = new System.Collections.ObjectModel.ObservableCollection<TEntity>();
            _query = _data.AsQueryable();
        }

        public FakeDbSet(params string[] primaryKeys)
        {
            _primaryKeys = typeof(TEntity).GetProperties().Where(x => primaryKeys.Contains(x.Name)).ToArray();
            _data = new System.Collections.ObjectModel.ObservableCollection<TEntity>();
            _query = _data.AsQueryable();
        }

        public override TEntity Find(params object[] keyValues)
        {
            if (_primaryKeys == null)
                throw new System.ArgumentException("No primary keys defined");
            if (keyValues.Length != _primaryKeys.Length)
                throw new System.ArgumentException("Incorrect number of keys passed to Find method");

            var keyQuery = this.AsQueryable();
            keyQuery = keyValues
                .Select((t, i) => i)
                .Aggregate(keyQuery,
                    (current, x) =>
                        current.Where(entity => _primaryKeys[x].GetValue(entity, null).Equals(keyValues[x])));

            return keyQuery.SingleOrDefault();
        }

        public override System.Threading.Tasks.Task<TEntity> FindAsync(System.Threading.CancellationToken cancellationToken, params object[] keyValues)
        {
            return System.Threading.Tasks.Task<TEntity>.Factory.StartNew(() => Find(keyValues), cancellationToken);
        }

        public override System.Threading.Tasks.Task<TEntity> FindAsync(params object[] keyValues)
        {
            return System.Threading.Tasks.Task<TEntity>.Factory.StartNew(() => Find(keyValues));
        }

        public override System.Collections.Generic.IEnumerable<TEntity> AddRange(System.Collections.Generic.IEnumerable<TEntity> entities)
        {
            if (entities == null) throw new System.ArgumentNullException("entities");
            var items = entities.ToList();
            foreach (var entity in items)
            {
                _data.Add(entity);
            }
            return items;
        }

        public override TEntity Add(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Add(item);
            return item;
        }

        public override System.Collections.Generic.IEnumerable<TEntity> RemoveRange(System.Collections.Generic.IEnumerable<TEntity> entities)
        {
            if (entities == null) throw new System.ArgumentNullException("entities");
            var items = entities.ToList();
            foreach (var entity in items)
            {
                _data.Remove(entity);
            }
            return items;
        }

        public override TEntity Remove(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Remove(item);
            return item;
        }

        public override TEntity Attach(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Add(item);
            return item;
        }

        public override TEntity Create()
        {
            return System.Activator.CreateInstance<TEntity>();
        }

        public override TDerivedEntity Create<TDerivedEntity>()
        {
            return System.Activator.CreateInstance<TDerivedEntity>();
        }

        public override System.Collections.ObjectModel.ObservableCollection<TEntity> Local
        {
            get { return _data; }
        }

        System.Type IQueryable.ElementType
        {
            get { return _query.ElementType; }
        }

        System.Linq.Expressions.Expression IQueryable.Expression
        {
            get { return _query.Expression; }
        }

        IQueryProvider IQueryable.Provider
        {
            get { return new FakeDbAsyncQueryProvider<TEntity>(_query.Provider); }
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _data.GetEnumerator();
        }

        System.Collections.Generic.IEnumerator<TEntity> System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator()
        {
            return _data.GetEnumerator();
        }

        System.Data.Entity.Infrastructure.IDbAsyncEnumerator<TEntity> System.Data.Entity.Infrastructure.IDbAsyncEnumerable<TEntity>.GetAsyncEnumerator()
        {
            return new FakeDbAsyncEnumerator<TEntity>(_data.GetEnumerator());
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class FakeDbAsyncQueryProvider<TEntity> : System.Data.Entity.Infrastructure.IDbAsyncQueryProvider
    {
        private readonly IQueryProvider _inner;

        public FakeDbAsyncQueryProvider(IQueryProvider inner)
        {
            _inner = inner;
        }

        public IQueryable CreateQuery(System.Linq.Expressions.Expression expression)
        {
            return new FakeDbAsyncEnumerable<TEntity>(expression);
        }

        public IQueryable<TElement> CreateQuery<TElement>(System.Linq.Expressions.Expression expression)
        {
            return new FakeDbAsyncEnumerable<TElement>(expression);
        }

        public object Execute(System.Linq.Expressions.Expression expression)
        {
            return _inner.Execute(expression);
        }

        public TResult Execute<TResult>(System.Linq.Expressions.Expression expression)
        {
            return _inner.Execute<TResult>(expression);
        }

        public System.Threading.Tasks.Task<object> ExecuteAsync(System.Linq.Expressions.Expression expression, System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(Execute(expression));
        }

        public System.Threading.Tasks.Task<TResult> ExecuteAsync<TResult>(System.Linq.Expressions.Expression expression, System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(Execute<TResult>(expression));
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class FakeDbAsyncEnumerable<T> : EnumerableQuery<T>, System.Data.Entity.Infrastructure.IDbAsyncEnumerable<T>, IQueryable<T>
    {
        public FakeDbAsyncEnumerable(System.Collections.Generic.IEnumerable<T> enumerable)
            : base(enumerable)
        { }

        public FakeDbAsyncEnumerable(System.Linq.Expressions.Expression expression)
            : base(expression)
        { }

        public System.Data.Entity.Infrastructure.IDbAsyncEnumerator<T> GetAsyncEnumerator()
        {
            return new FakeDbAsyncEnumerator<T>(this.AsEnumerable().GetEnumerator());
        }

        System.Data.Entity.Infrastructure.IDbAsyncEnumerator System.Data.Entity.Infrastructure.IDbAsyncEnumerable.GetAsyncEnumerator()
        {
            return GetAsyncEnumerator();
        }

        IQueryProvider IQueryable.Provider
        {
            get { return new FakeDbAsyncQueryProvider<T>(this); }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class FakeDbAsyncEnumerator<T> : System.Data.Entity.Infrastructure.IDbAsyncEnumerator<T>
    {
        private readonly System.Collections.Generic.IEnumerator<T> _inner;

        public FakeDbAsyncEnumerator(System.Collections.Generic.IEnumerator<T> inner)
        {
            _inner = inner;
        }

        public void Dispose()
        {
            _inner.Dispose();
        }

        public System.Threading.Tasks.Task<bool> MoveNextAsync(System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(_inner.MoveNext());
        }

        public T Current
        {
            get { return _inner.Current; }
        }

        object System.Data.Entity.Infrastructure.IDbAsyncEnumerator.Current
        {
            get { return Current; }
        }
    }

    #endregion

    #region POCO classes

    // Actions
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class Action
    {
        public int ActionId { get; set; } // ActionID (Primary key)
        public string ActionName { get; set; } // ActionName
        public string ControllerName { get; set; } // ControllerName
        public string AreaName { get; set; } // AreaName

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<Perfi> Perfis { get; set; } // Many to many mapping

        public Action()
        {
            Perfis = new System.Collections.Generic.List<Perfi>();
        }
    }

    // Aeroportos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class Aeroporto
    {
        public int AeroportoId { get; set; } // AeroportoID (Primary key)
        public string AeroportoNome { get; set; } // AeroportoNome
        public string AeroportoIata { get; set; } // AeroportoIATA
        public int LocalidadeIdFk { get; set; } // LocalidadeID_FK

        // Foreign keys
        public virtual Localidade Localidade { get; set; } // FK_dbo.Aeroportos_dbo.Localidades_LocalidadeID_FK
    }

    // AgendaColetas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class AgendaColeta
    {
        public int Id { get; set; } // Id (Primary key)
        public System.DateTime DataHoraAgendamento { get; set; } // DataHoraAgendamento
        public string ResponsavelPelaColeta { get; set; } // ResponsavelPelaColeta
        public bool Cancelado { get; set; } // Cancelado
        public int? SolicitacaoColetaId { get; set; } // SolicitacaoColeta_Id

        // Foreign keys
        public virtual SolicitacoesDeColeta SolicitacoesDeColeta { get; set; } // FK_dbo.AgendaColetas_dbo.SolicitacoesDeColeta_SolicitacaoColeta_Id
    }

    // Agentes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class Agente
    {
        public int AgenteId { get; set; } // AgenteID (Primary key)
        public System.DateTime? DtCadastramento { get; set; } // DtCadastramento
        public string AgenteNome { get; set; } // AgenteNome
        public string RazaoSocial { get; set; } // RazaoSocial
        public string Contato { get; set; } // Contato
        public System.DateTime? DtNascimento { get; set; } // DtNascimento
        public long Cnpj { get; set; } // CNPJ
        public long InscrEstNr { get; set; } // InscrEstNr
        public int Cpf { get; set; } // CPF
        public int Rg { get; set; } // RG
        public string RgOrgExp { get; set; } // RGOrgExp
        public string Endereco { get; set; } // Endereco
        public string Bairro { get; set; } // Bairro
        public int Cep { get; set; } // CEP
        public int Telefone { get; set; } // Telefone
        public int CodFilial { get; set; } // CodFilial
        public string Email { get; set; } // Email

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<Localidade> Localidades { get; set; } // Many to many mapping

        public Agente()
        {
            Localidades = new System.Collections.Generic.List<Localidade>();
        }
    }

    // Cargas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class Carga
    {
        public int Id { get; set; } // Id (Primary key)
        public string DescricaoCarga { get; set; } // DescricaoCarga
        public double Peso { get; set; } // Peso
        public double Volume { get; set; } // Volume
        public string Conteudo { get; set; } // Conteudo
        public string NotasFiscais { get; set; } // NotasFiscais
        public double ValorCarga { get; set; } // ValorCarga
        public double Altura { get; set; } // Altura
        public double Largura { get; set; } // Largura
        public double Profundidade { get; set; } // Profundidade
        public string CargaEntreguePor { get; set; } // CargaEntreguePor
        public bool NecessitaEscolta { get; set; } // NecessitaEscolta
        public bool NecessitaServicoDiferenciado { get; set; } // NecessitaServicoDiferenciado
        public string DescricaoServicoDiferenciado { get; set; } // DescricaoServicoDiferenciado
        public bool ReservarEspacoTransportadora { get; set; } // ReservarEspacoTransportadora
        public bool ContemplaServico { get; set; } // ContemplaServico
        public bool CargaInternacional { get; set; } // CargaInternacional
        public System.DateTime? DataColeta { get; set; } // DataColeta
        public string Obersavacoes { get; set; } // Obersavacoes
        public int? CargaPerecivelId { get; set; } // CargaPerecivel_Id
        public int? CargaPerigosaId { get; set; } // CargaPerigosa_Id
        public int? CargaSensivelId { get; set; } // CargaSensivel_Id
        public int? EnderecoDestinatarioId { get; set; } // EnderecoDestinatario_Id
        public int? SolicitacaoColetaId { get; set; } // SolicitacaoColeta_Id
        public int? TipoEspecieId { get; set; } // TipoEspecie_Id
        public int? TipoServicoId { get; set; } // TipoServico_Id

        // Foreign keys
        public virtual EnderecosConsolidado EnderecosConsolidado { get; set; } // FK_dbo.Cargas_dbo.EnderecosConsolidados_EnderecoDestinatario_Id
        public virtual SolicitacoesDeColeta SolicitacoesDeColeta { get; set; } // FK_dbo.Cargas_dbo.SolicitacoesDeColeta_SolicitacaoColeta_Id
        public virtual StatusTipos CargaPerecivel { get; set; } // FK_dbo.Cargas_dbo.StatusTipos_CargaPerecivel_Id
        public virtual StatusTipos CargaPerigosa { get; set; } // FK_dbo.Cargas_dbo.StatusTipos_CargaPerigosa_Id
        public virtual StatusTipos CargaSensivel { get; set; } // FK_dbo.Cargas_dbo.StatusTipos_CargaSensivel_Id
        public virtual StatusTipos TipoEspecie { get; set; } // FK_dbo.Cargas_dbo.StatusTipos_TipoEspecie_Id
        public virtual StatusTipos TipoServico { get; set; } // FK_dbo.Cargas_dbo.StatusTipos_TipoServico_Id
    }

    // Ceps
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class Cep
    {
        public int Id { get; set; } // Id (Primary key)
        public string Logradouro { get; set; } // Logradouro
        public string Bairro { get; set; } // Bairro
        public string NumeroCep { get; set; } // NumeroCep (length: 8)
        public string Uf { get; set; } // UF (length: 2)
        public string Cidade { get; set; } // Cidade
        public System.DateTime? Data { get; set; } // Data
        public int? AlteradoPor { get; set; } // AlteradoPor

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<Endereco> Enderecoes { get; set; } // Enderecoes.FK_dbo.Enderecoes_dbo.Ceps_CepId

        public Cep()
        {
            Enderecoes = new System.Collections.Generic.List<Endereco>();
        }
    }

    // ContasCorrente
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class ContasCorrente
    {
        public int ContratoContaId { get; set; } // ContratoContaID (Primary key)
        public string ContratoContaNome { get; set; } // ContratoContaNome
        public int? ContratoId { get; set; } // Contrato_Id
        public int? PessoaId { get; set; } // Pessoa_Id
        public int? UsuarioUsuarioId { get; set; } // Usuario_UsuarioID

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<SolicitacoesDeColeta> SolicitacoesDeColetas { get; set; } // SolicitacoesDeColeta.FK_dbo.SolicitacoesDeColeta_dbo.ContasCorrente_ContaCorrente_ContratoContaID

        // Foreign keys
        public virtual Contrato Contrato { get; set; } // FK_dbo.ContasCorrente_dbo.Contratos_Contrato_Id
        public virtual Pontual_Pessoa Pontual_Pessoa { get; set; } // FK_dbo.ContasCorrente_Pontual.Pessoas_Pessoa_Id
        public virtual Usuario Usuario { get; set; } // FK_dbo.ContasCorrente_dbo.Usuarios_Usuario_UsuarioID

        public ContasCorrente()
        {
            SolicitacoesDeColetas = new System.Collections.Generic.List<SolicitacoesDeColeta>();
        }
    }

    // Contratos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class Contrato
    {
        public int Id { get; set; } // Id (Primary key)
        public string Nome { get; set; } // Nome
        public bool Ativo { get; set; } // Ativo
        public System.DateTime? Data { get; set; } // Data
        public int? AlteradoPor { get; set; } // AlteradoPor

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<ContasCorrente> ContasCorrentes { get; set; } // ContasCorrente.FK_dbo.ContasCorrente_dbo.Contratos_Contrato_Id

        public Contrato()
        {
            ContasCorrentes = new System.Collections.Generic.List<ContasCorrente>();
        }
    }

    // Enderecoes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class Endereco
    {
        public int Id { get; set; } // Id (Primary key)
        public string Bairro { get; set; } // Bairro
        public string Logradouro { get; set; } // Logradouro
        public string Numero { get; set; } // Numero
        public string Comlemento { get; set; } // Comlemento
        public int? TipoLogradouroId { get; set; } // TipoLogradouroId
        public int CepId { get; set; } // CepId
        public int PessoaId { get; set; } // PessoaId
        public System.DateTime? Data { get; set; } // Data
        public int? AlteradoPor { get; set; } // AlteradoPor

        // Foreign keys
        public virtual Cep Cep { get; set; } // FK_dbo.Enderecoes_dbo.Ceps_CepId
        public virtual Pontual_Pessoa Pontual_Pessoa { get; set; } // FK_dbo.Enderecoes_Pontual.Pessoas_PessoaId
        public virtual StatusTipos StatusTipos { get; set; } // FK_dbo.Enderecoes_dbo.StatusTipos_TipoLogradouroId
    }

    // EnderecosConsolidados
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class EnderecosConsolidado
    {
        public int Id { get; set; } // Id (Primary key)
        public string Nome { get; set; } // Nome
        public string Cidade { get; set; } // Cidade
        public string Cnpj { get; set; } // CNPJ
        public string Cpf { get; set; } // CPF
        public string Ie { get; set; } // IE
        public string Logradouro { get; set; } // Logradouro
        public string Bairro { get; set; } // Bairro
        public string Cep { get; set; } // CEP
        public string Telefone { get; set; } // Telefone
        public string Fax { get; set; } // Fax
        public string Numero { get; set; } // Numero
        public string Complemento { get; set; } // Complemento
        public string Uf { get; set; } // UF

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<Carga> Cargas { get; set; } // Cargas.FK_dbo.Cargas_dbo.EnderecosConsolidados_EnderecoDestinatario_Id
        public virtual System.Collections.Generic.ICollection<SolicitacoesDeColeta> EnderecoColeta { get; set; } // SolicitacoesDeColeta.FK_dbo.SolicitacoesDeColeta_dbo.EnderecosConsolidados_EnderecoColeta_Id
        public virtual System.Collections.Generic.ICollection<SolicitacoesDeColeta> EnderecoRemetente { get; set; } // SolicitacoesDeColeta.FK_dbo.SolicitacoesDeColeta_dbo.EnderecosConsolidados_EnderecoRemetente_Id

        public EnderecosConsolidado()
        {
            Cargas = new System.Collections.Generic.List<Carga>();
            EnderecoColeta = new System.Collections.Generic.List<SolicitacoesDeColeta>();
            EnderecoRemetente = new System.Collections.Generic.List<SolicitacoesDeColeta>();
        }
    }

    // Localidades
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class Localidade
    {
        public int LocalidadeId { get; set; } // LocalidadeID (Primary key)
        public string CidadeNome { get; set; } // CidadeNome
        public bool Ativo { get; set; } // Ativo
        public bool FlgCapital { get; set; } // FlgCapital
        public bool FlgRegional { get; set; } // FlgRegional
        public int KmRedespacho { get; set; } // KmRedespacho
        public int QtdPedagios { get; set; } // QtdPedagios
        public string SiglaLocalidade { get; set; } // SiglaLocalidade
        public int? UfUfId { get; set; } // Uf_UfID

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<Aeroporto> Aeroportoes { get; set; } // Aeroportos.FK_dbo.Aeroportos_dbo.Localidades_LocalidadeID_FK
        public virtual System.Collections.Generic.ICollection<Agente> Agentes { get; set; } // Many to many mapping
        public virtual System.Collections.Generic.ICollection<Perfi> Perfis { get; set; } // Many to many mapping

        // Foreign keys
        public virtual Uf Uf { get; set; } // FK_dbo.Localidades_dbo.Ufs_Uf_UfID

        public Localidade()
        {
            Aeroportoes = new System.Collections.Generic.List<Aeroporto>();
            Agentes = new System.Collections.Generic.List<Agente>();
            Perfis = new System.Collections.Generic.List<Perfi>();
        }
    }

    // Municipios
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class Municipio
    {
        public int MunicipioId { get; set; } // MunicipioID (Primary key)
        public string MunicipioNome { get; set; } // MunicipioNome
        public int FkUfId { get; set; } // FK_UF_ID

        // Foreign keys
        public virtual Uf Uf { get; set; } // FK_dbo.Municipios_dbo.Ufs_FK_UF_ID
    }

    // Perfis
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class Perfi
    {
        public int PerfilId { get; set; } // PerfilID (Primary key)
        public bool Ativo { get; set; } // Ativo
        public string PerfilNome { get; set; } // PerfilNome
        public string PerfilDescricao { get; set; } // PerfilDescricao
        public int? PerfilTipoPerfilTipoId { get; set; } // PerfilTipo_PerfilTipoID

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<Action> Actions { get; set; } // Many to many mapping
        public virtual System.Collections.Generic.ICollection<Localidade> Localidades { get; set; } // Many to many mapping
        public virtual System.Collections.Generic.ICollection<Usuario> Usuarios { get; set; } // Usuarios.FK_dbo.Usuarios_dbo.Perfis_Perfil_PerfilID

        // Foreign keys
        public virtual PerfisTipo PerfisTipo { get; set; } // FK_dbo.Perfis_dbo.PerfisTipo_PerfilTipo_PerfilTipoID

        public Perfi()
        {
            Usuarios = new System.Collections.Generic.List<Usuario>();
            Actions = new System.Collections.Generic.List<Action>();
            Localidades = new System.Collections.Generic.List<Localidade>();
        }
    }

    // PerfisTipo
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class PerfisTipo
    {
        public int PerfilTipoId { get; set; } // PerfilTipoID (Primary key)
        public string PerfilTipoNome { get; set; } // PerfilTipoNome

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<Perfi> Perfis { get; set; } // Perfis.FK_dbo.Perfis_dbo.PerfisTipo_PerfilTipo_PerfilTipoID

        public PerfisTipo()
        {
            Perfis = new System.Collections.Generic.List<Perfi>();
        }
    }

    // Pessoas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class Pontual_Pessoa
    {
        public int Id { get; set; } // Id (Primary key)
        public string Nome { get; set; } // Nome
        public string RazaoSocial { get; set; } // RazaoSocial
        public string Ie { get; set; } // IE
        public string Cnpj { get; set; } // CNPJ (length: 15)
        public string Cpf { get; set; } // CPF (length: 11)
        public int TipoPessoaId { get; set; } // TipoPessoaId
        public System.DateTime? Data { get; set; } // Data
        public int? AlteradoPor { get; set; } // AlteradoPor
        public int? PessoaId { get; set; } // Pessoa_Id

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<ContasCorrente> ContasCorrentes { get; set; } // ContasCorrente.FK_dbo.ContasCorrente_Pontual.Pessoas_Pessoa_Id
        public virtual System.Collections.Generic.ICollection<Endereco> Enderecoes { get; set; } // Enderecoes.FK_dbo.Enderecoes_Pontual.Pessoas_PessoaId
        public virtual System.Collections.Generic.ICollection<Pontual_Pessoa> Pontual_Pessoas { get; set; } // Pessoas.FK_Pontual.Pessoas_Pontual.Pessoas_Pessoa_Id
        public virtual System.Collections.Generic.ICollection<SolicitacoesDeColeta> SolicitacoesDeColetas { get; set; } // SolicitacoesDeColeta.FK_dbo.SolicitacoesDeColeta_Pontual.Pessoas_Cliente_Id
        public virtual System.Collections.Generic.ICollection<Telefone> Telefones { get; set; } // Telefones.FK_dbo.Telefones_Pontual.Pessoas_PessoaId

        // Foreign keys
        public virtual Pontual_Pessoa Pessoa { get; set; } // FK_Pontual.Pessoas_Pontual.Pessoas_Pessoa_Id
        public virtual StatusTipos StatusTipos { get; set; } // FK_Pontual.Pessoas_dbo.StatusTipos_TipoPessoaId

        public Pontual_Pessoa()
        {
            ContasCorrentes = new System.Collections.Generic.List<ContasCorrente>();
            Enderecoes = new System.Collections.Generic.List<Endereco>();
            Pontual_Pessoas = new System.Collections.Generic.List<Pontual_Pessoa>();
            SolicitacoesDeColetas = new System.Collections.Generic.List<SolicitacoesDeColeta>();
            Telefones = new System.Collections.Generic.List<Telefone>();
        }
    }

    // SolicitacoesDeColeta
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class SolicitacoesDeColeta
    {
        public int Id { get; set; } // Id (Primary key)
        public int NumeroSolicitacaoColeta { get; set; } // NumeroSolicitacaoColeta
        public bool PermiteAlteracao { get; set; } // PermiteAlteracao
        public string SolicitacaoCadastradaPor { get; set; } // SolicitacaoCadastradaPor
        public System.DateTime DataCriacao { get; set; } // DataCriacao
        public string AutorizadaPor { get; set; } // AutorizadaPor
        public string ColetadoPor { get; set; } // ColetadoPor
        public System.DateTime? Data { get; set; } // Data
        public int? AlteradoPor { get; set; } // AlteradoPor
        public int? ClienteId { get; set; } // Cliente_Id
        public int? ContaCorrenteContratoContaId { get; set; } // ContaCorrente_ContratoContaID
        public int? EnderecoColetaId { get; set; } // EnderecoColeta_Id
        public int? EnderecoRemetenteId { get; set; } // EnderecoRemetente_Id
        public int? SolicitacaoStatusId { get; set; } // SolicitacaoStatus_Id
        public int? TipoSolicitacaoId { get; set; } // TipoSolicitacao_Id

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<AgendaColeta> AgendaColetas { get; set; } // AgendaColetas.FK_dbo.AgendaColetas_dbo.SolicitacoesDeColeta_SolicitacaoColeta_Id
        public virtual System.Collections.Generic.ICollection<Carga> Cargas { get; set; } // Cargas.FK_dbo.Cargas_dbo.SolicitacoesDeColeta_SolicitacaoColeta_Id

        // Foreign keys
        public virtual ContasCorrente ContasCorrente { get; set; } // FK_dbo.SolicitacoesDeColeta_dbo.ContasCorrente_ContaCorrente_ContratoContaID
        public virtual EnderecosConsolidado EnderecoColeta { get; set; } // FK_dbo.SolicitacoesDeColeta_dbo.EnderecosConsolidados_EnderecoColeta_Id
        public virtual EnderecosConsolidado EnderecoRemetente { get; set; } // FK_dbo.SolicitacoesDeColeta_dbo.EnderecosConsolidados_EnderecoRemetente_Id
        public virtual Pontual_Pessoa Pontual_Pessoa { get; set; } // FK_dbo.SolicitacoesDeColeta_Pontual.Pessoas_Cliente_Id
        public virtual StatusTipos SolicitacaoStatus { get; set; } // FK_dbo.SolicitacoesDeColeta_dbo.StatusTipos_SolicitacaoStatus_Id
        public virtual StatusTipos TipoSolicitacao { get; set; } // FK_dbo.SolicitacoesDeColeta_dbo.StatusTipos_TipoSolicitacao_Id

        public SolicitacoesDeColeta()
        {
            AgendaColetas = new System.Collections.Generic.List<AgendaColeta>();
            Cargas = new System.Collections.Generic.List<Carga>();
        }
    }

    // StatusTipos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class StatusTipos
    {
        public int Id { get; set; } // Id (Primary key)
        public int? Pai { get; set; } // Pai
        public string Descricao { get; set; } // Descricao
        public bool Ativo { get; set; } // Ativo
        public System.DateTime? Data { get; set; } // Data
        public int? AlteradoPor { get; set; } // AlteradoPor

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<Carga> CargaPerecivel { get; set; } // Cargas.FK_dbo.Cargas_dbo.StatusTipos_CargaPerecivel_Id
        public virtual System.Collections.Generic.ICollection<Carga> CargaPerigosa { get; set; } // Cargas.FK_dbo.Cargas_dbo.StatusTipos_CargaPerigosa_Id
        public virtual System.Collections.Generic.ICollection<Carga> CargaSensivel { get; set; } // Cargas.FK_dbo.Cargas_dbo.StatusTipos_CargaSensivel_Id
        public virtual System.Collections.Generic.ICollection<Carga> TipoEspecie { get; set; } // Cargas.FK_dbo.Cargas_dbo.StatusTipos_TipoEspecie_Id
        public virtual System.Collections.Generic.ICollection<Carga> TipoServico { get; set; } // Cargas.FK_dbo.Cargas_dbo.StatusTipos_TipoServico_Id
        public virtual System.Collections.Generic.ICollection<Endereco> Enderecoes { get; set; } // Enderecoes.FK_dbo.Enderecoes_dbo.StatusTipos_TipoLogradouroId
        public virtual System.Collections.Generic.ICollection<Pontual_Pessoa> Pontual_Pessoas { get; set; } // Pessoas.FK_Pontual.Pessoas_dbo.StatusTipos_TipoPessoaId
        public virtual System.Collections.Generic.ICollection<SolicitacoesDeColeta> SolicitacaoStatus { get; set; } // SolicitacoesDeColeta.FK_dbo.SolicitacoesDeColeta_dbo.StatusTipos_SolicitacaoStatus_Id
        public virtual System.Collections.Generic.ICollection<SolicitacoesDeColeta> TipoSolicitacao { get; set; } // SolicitacoesDeColeta.FK_dbo.SolicitacoesDeColeta_dbo.StatusTipos_TipoSolicitacao_Id
        public virtual System.Collections.Generic.ICollection<StatusTipos> StatusTipos2 { get; set; } // StatusTipos.FK_dbo.StatusTipos_dbo.StatusTipos_Pai
        public virtual System.Collections.Generic.ICollection<Telefone> Telefones { get; set; } // Telefones.FK_dbo.Telefones_dbo.StatusTipos_TipoTelefoneId

        // Foreign keys
        public virtual StatusTipos StatusTipos1 { get; set; } // FK_dbo.StatusTipos_dbo.StatusTipos_Pai

        public StatusTipos()
        {
            CargaPerecivel = new System.Collections.Generic.List<Carga>();
            CargaPerigosa = new System.Collections.Generic.List<Carga>();
            CargaSensivel = new System.Collections.Generic.List<Carga>();
            TipoEspecie = new System.Collections.Generic.List<Carga>();
            TipoServico = new System.Collections.Generic.List<Carga>();
            Enderecoes = new System.Collections.Generic.List<Endereco>();
            Pontual_Pessoas = new System.Collections.Generic.List<Pontual_Pessoa>();
            SolicitacaoStatus = new System.Collections.Generic.List<SolicitacoesDeColeta>();
            TipoSolicitacao = new System.Collections.Generic.List<SolicitacoesDeColeta>();
            StatusTipos2 = new System.Collections.Generic.List<StatusTipos>();
            Telefones = new System.Collections.Generic.List<Telefone>();
        }
    }

    // Telefones
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class Telefone
    {
        public int Id { get; set; } // Id (Primary key)
        public string Ddd { get; set; } // DDD
        public string Numero { get; set; } // Numero
        public int? TipoTelefoneId { get; set; } // TipoTelefoneId
        public int PessoaId { get; set; } // PessoaId
        public System.DateTime? Data { get; set; } // Data
        public int? AlteradoPor { get; set; } // AlteradoPor

        // Foreign keys
        public virtual Pontual_Pessoa Pontual_Pessoa { get; set; } // FK_dbo.Telefones_Pontual.Pessoas_PessoaId
        public virtual StatusTipos StatusTipos { get; set; } // FK_dbo.Telefones_dbo.StatusTipos_TipoTelefoneId
    }

    // TicketStatus
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class TicketStatu
    {
        public int TicketStatusId { get; set; } // TicketStatusID (Primary key)
        public string TicketStatusNome { get; set; } // TicketStatusNome
    }

    // TipoServicos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class TipoServico
    {
        public int TipoServicoId { get; set; } // TipoServicoID (Primary key)
        public string TipoServicoNome { get; set; } // TipoServicoNome
        public string TipoServicoDescricao { get; set; } // TipoServicoDescricao
        public int TipoServicoOrdem { get; set; } // TipoServicoOrdem
    }

    // Ufs
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class Uf
    {
        public int UfId { get; set; } // UfID (Primary key)
        public string UfNome { get; set; } // UfNome

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<Localidade> Localidades { get; set; } // Localidades.FK_dbo.Localidades_dbo.Ufs_Uf_UfID
        public virtual System.Collections.Generic.ICollection<Municipio> Municipios { get; set; } // Municipios.FK_dbo.Municipios_dbo.Ufs_FK_UF_ID

        public Uf()
        {
            Localidades = new System.Collections.Generic.List<Localidade>();
            Municipios = new System.Collections.Generic.List<Municipio>();
        }
    }

    // Usuarios
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class Usuario
    {
        public int UsuarioId { get; set; } // UsuarioID (Primary key)
        public string UsuarioLogin { get; set; } // UsuarioLogin
        public string Senha { get; set; } // Senha
        public string Nome { get; set; } // Nome
        public string Email { get; set; } // Email
        public int Celular { get; set; } // Celular
        public int Cep { get; set; } // Cep
        public string SecurityStamp { get; set; } // SecurityStamp
        public bool EmailConfirmado { get; set; } // EmailConfirmado
        public bool Ativo { get; set; } // Ativo
        public int? PerfilPerfilId { get; set; } // Perfil_PerfilID

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<ContasCorrente> ContasCorrentes { get; set; } // ContasCorrente.FK_dbo.ContasCorrente_dbo.Usuarios_Usuario_UsuarioID

        // Foreign keys
        public virtual Perfi Perfi { get; set; } // FK_dbo.Usuarios_dbo.Perfis_Perfil_PerfilID

        public Usuario()
        {
            ContasCorrentes = new System.Collections.Generic.List<ContasCorrente>();
        }
    }

    // UsuariosRH
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class UsuariosRh
    {
        public int UsuarioRhid { get; set; } // UsuarioRHID (Primary key)
        public int Matricula { get; set; } // Matricula
        public string Nome { get; set; } // Nome
        public string Email { get; set; } // Email
        public int TelefonePontual { get; set; } // TelefonePontual
        public int Celular { get; set; } // Celular
        public int? UsuarioStatusRhUsuarioStatusRhId { get; set; } // UsuarioStatusRH_UsuarioStatusRhID

        // Foreign keys
        public virtual UsuariosStatusRh UsuariosStatusRh { get; set; } // FK_dbo.UsuariosRH_dbo.UsuariosStatusRH_UsuarioStatusRH_UsuarioStatusRhID
    }

    // UsuariosStatusRH
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class UsuariosStatusRh
    {
        public int UsuarioStatusRhId { get; set; } // UsuarioStatusRhID (Primary key)
        public string UsuarioStatusRhNome { get; set; } // UsuarioStatusRhNome

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<UsuariosRh> UsuariosRhs { get; set; } // UsuariosRH.FK_dbo.UsuariosRH_dbo.UsuariosStatusRH_UsuarioStatusRH_UsuarioStatusRhID

        public UsuariosStatusRh()
        {
            UsuariosRhs = new System.Collections.Generic.List<UsuariosRh>();
        }
    }

    #endregion

    #region POCO Configuration

    // Actions
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class ActionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Action>
    {
        public ActionConfiguration()
            : this("dbo")
        {
        }

        public ActionConfiguration(string schema)
        {
            ToTable("Actions", schema);
            HasKey(x => x.ActionId);

            Property(x => x.ActionId).HasColumnName(@"ActionID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ActionName).HasColumnName(@"ActionName").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.ControllerName).HasColumnName(@"ControllerName").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.AreaName).HasColumnName(@"AreaName").IsOptional().HasColumnType("nvarchar(max)");
            HasMany(t => t.Perfis).WithMany(t => t.Actions).Map(m =>
            {
                m.ToTable("PerfilActions", "dbo");
                m.MapLeftKey("ActionID");
                m.MapRightKey("PerfilID");
            });
        }
    }

    // Aeroportos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class AeroportoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Aeroporto>
    {
        public AeroportoConfiguration()
            : this("dbo")
        {
        }

        public AeroportoConfiguration(string schema)
        {
            ToTable("Aeroportos", schema);
            HasKey(x => x.AeroportoId);

            Property(x => x.AeroportoId).HasColumnName(@"AeroportoID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.AeroportoNome).HasColumnName(@"AeroportoNome").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.AeroportoIata).HasColumnName(@"AeroportoIATA").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.LocalidadeIdFk).HasColumnName(@"LocalidadeID_FK").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.Localidade).WithMany(b => b.Aeroportoes).HasForeignKey(c => c.LocalidadeIdFk); // FK_dbo.Aeroportos_dbo.Localidades_LocalidadeID_FK
        }
    }

    // AgendaColetas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class AgendaColetaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AgendaColeta>
    {
        public AgendaColetaConfiguration()
            : this("dbo")
        {
        }

        public AgendaColetaConfiguration(string schema)
        {
            ToTable("AgendaColetas", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.DataHoraAgendamento).HasColumnName(@"DataHoraAgendamento").IsRequired().HasColumnType("datetime");
            Property(x => x.ResponsavelPelaColeta).HasColumnName(@"ResponsavelPelaColeta").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Cancelado).HasColumnName(@"Cancelado").IsRequired().HasColumnType("bit");
            Property(x => x.SolicitacaoColetaId).HasColumnName(@"SolicitacaoColeta_Id").IsOptional().HasColumnType("int");

            // Foreign keys
            HasOptional(a => a.SolicitacoesDeColeta).WithMany(b => b.AgendaColetas).HasForeignKey(c => c.SolicitacaoColetaId).WillCascadeOnDelete(false); // FK_dbo.AgendaColetas_dbo.SolicitacoesDeColeta_SolicitacaoColeta_Id
        }
    }

    // Agentes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class AgenteConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Agente>
    {
        public AgenteConfiguration()
            : this("dbo")
        {
        }

        public AgenteConfiguration(string schema)
        {
            ToTable("Agentes", schema);
            HasKey(x => x.AgenteId);

            Property(x => x.AgenteId).HasColumnName(@"AgenteID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.DtCadastramento).HasColumnName(@"DtCadastramento").IsOptional().HasColumnType("datetime");
            Property(x => x.AgenteNome).HasColumnName(@"AgenteNome").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.RazaoSocial).HasColumnName(@"RazaoSocial").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Contato).HasColumnName(@"Contato").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.DtNascimento).HasColumnName(@"DtNascimento").IsOptional().HasColumnType("datetime");
            Property(x => x.Cnpj).HasColumnName(@"CNPJ").IsRequired().HasColumnType("bigint");
            Property(x => x.InscrEstNr).HasColumnName(@"InscrEstNr").IsRequired().HasColumnType("bigint");
            Property(x => x.Cpf).HasColumnName(@"CPF").IsRequired().HasColumnType("int");
            Property(x => x.Rg).HasColumnName(@"RG").IsRequired().HasColumnType("int");
            Property(x => x.RgOrgExp).HasColumnName(@"RGOrgExp").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Endereco).HasColumnName(@"Endereco").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Bairro).HasColumnName(@"Bairro").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Cep).HasColumnName(@"CEP").IsRequired().HasColumnType("int");
            Property(x => x.Telefone).HasColumnName(@"Telefone").IsRequired().HasColumnType("int");
            Property(x => x.CodFilial).HasColumnName(@"CodFilial").IsRequired().HasColumnType("int");
            Property(x => x.Email).HasColumnName(@"Email").IsOptional().HasColumnType("nvarchar(max)");
            HasMany(t => t.Localidades).WithMany(t => t.Agentes).Map(m =>
            {
                m.ToTable("AgenteLocalidades", "dbo");
                m.MapLeftKey("Agente_AgenteID");
                m.MapRightKey("Localidade_LocalidadeID");
            });
        }
    }

    // Cargas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class CargaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Carga>
    {
        public CargaConfiguration()
            : this("dbo")
        {
        }

        public CargaConfiguration(string schema)
        {
            ToTable("Cargas", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.DescricaoCarga).HasColumnName(@"DescricaoCarga").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Peso).HasColumnName(@"Peso").IsRequired().HasColumnType("float");
            Property(x => x.Volume).HasColumnName(@"Volume").IsRequired().HasColumnType("float");
            Property(x => x.Conteudo).HasColumnName(@"Conteudo").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.NotasFiscais).HasColumnName(@"NotasFiscais").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.ValorCarga).HasColumnName(@"ValorCarga").IsRequired().HasColumnType("float");
            Property(x => x.Altura).HasColumnName(@"Altura").IsRequired().HasColumnType("float");
            Property(x => x.Largura).HasColumnName(@"Largura").IsRequired().HasColumnType("float");
            Property(x => x.Profundidade).HasColumnName(@"Profundidade").IsRequired().HasColumnType("float");
            Property(x => x.CargaEntreguePor).HasColumnName(@"CargaEntreguePor").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.NecessitaEscolta).HasColumnName(@"NecessitaEscolta").IsRequired().HasColumnType("bit");
            Property(x => x.NecessitaServicoDiferenciado).HasColumnName(@"NecessitaServicoDiferenciado").IsRequired().HasColumnType("bit");
            Property(x => x.DescricaoServicoDiferenciado).HasColumnName(@"DescricaoServicoDiferenciado").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.ReservarEspacoTransportadora).HasColumnName(@"ReservarEspacoTransportadora").IsRequired().HasColumnType("bit");
            Property(x => x.ContemplaServico).HasColumnName(@"ContemplaServico").IsRequired().HasColumnType("bit");
            Property(x => x.CargaInternacional).HasColumnName(@"CargaInternacional").IsRequired().HasColumnType("bit");
            Property(x => x.DataColeta).HasColumnName(@"DataColeta").IsOptional().HasColumnType("datetime");
            Property(x => x.Obersavacoes).HasColumnName(@"Obersavacoes").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.CargaPerecivelId).HasColumnName(@"CargaPerecivel_Id").IsOptional().HasColumnType("int");
            Property(x => x.CargaPerigosaId).HasColumnName(@"CargaPerigosa_Id").IsOptional().HasColumnType("int");
            Property(x => x.CargaSensivelId).HasColumnName(@"CargaSensivel_Id").IsOptional().HasColumnType("int");
            Property(x => x.EnderecoDestinatarioId).HasColumnName(@"EnderecoDestinatario_Id").IsOptional().HasColumnType("int");
            Property(x => x.SolicitacaoColetaId).HasColumnName(@"SolicitacaoColeta_Id").IsOptional().HasColumnType("int");
            Property(x => x.TipoEspecieId).HasColumnName(@"TipoEspecie_Id").IsOptional().HasColumnType("int");
            Property(x => x.TipoServicoId).HasColumnName(@"TipoServico_Id").IsOptional().HasColumnType("int");

            // Foreign keys
            HasOptional(a => a.CargaPerecivel).WithMany(b => b.CargaPerecivel).HasForeignKey(c => c.CargaPerecivelId).WillCascadeOnDelete(false); // FK_dbo.Cargas_dbo.StatusTipos_CargaPerecivel_Id
            HasOptional(a => a.CargaPerigosa).WithMany(b => b.CargaPerigosa).HasForeignKey(c => c.CargaPerigosaId).WillCascadeOnDelete(false); // FK_dbo.Cargas_dbo.StatusTipos_CargaPerigosa_Id
            HasOptional(a => a.CargaSensivel).WithMany(b => b.CargaSensivel).HasForeignKey(c => c.CargaSensivelId).WillCascadeOnDelete(false); // FK_dbo.Cargas_dbo.StatusTipos_CargaSensivel_Id
            HasOptional(a => a.EnderecosConsolidado).WithMany(b => b.Cargas).HasForeignKey(c => c.EnderecoDestinatarioId).WillCascadeOnDelete(false); // FK_dbo.Cargas_dbo.EnderecosConsolidados_EnderecoDestinatario_Id
            HasOptional(a => a.SolicitacoesDeColeta).WithMany(b => b.Cargas).HasForeignKey(c => c.SolicitacaoColetaId).WillCascadeOnDelete(false); // FK_dbo.Cargas_dbo.SolicitacoesDeColeta_SolicitacaoColeta_Id
            HasOptional(a => a.TipoEspecie).WithMany(b => b.TipoEspecie).HasForeignKey(c => c.TipoEspecieId).WillCascadeOnDelete(false); // FK_dbo.Cargas_dbo.StatusTipos_TipoEspecie_Id
            HasOptional(a => a.TipoServico).WithMany(b => b.TipoServico).HasForeignKey(c => c.TipoServicoId).WillCascadeOnDelete(false); // FK_dbo.Cargas_dbo.StatusTipos_TipoServico_Id
        }
    }

    // Ceps
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class CepConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Cep>
    {
        public CepConfiguration()
            : this("dbo")
        {
        }

        public CepConfiguration(string schema)
        {
            ToTable("Ceps", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Logradouro).HasColumnName(@"Logradouro").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Bairro).HasColumnName(@"Bairro").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.NumeroCep).HasColumnName(@"NumeroCep").IsOptional().HasColumnType("nvarchar").HasMaxLength(8);
            Property(x => x.Uf).HasColumnName(@"UF").IsOptional().HasColumnType("nvarchar").HasMaxLength(2);
            Property(x => x.Cidade).HasColumnName(@"Cidade").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Data).HasColumnName(@"Data").IsOptional().HasColumnType("datetime");
            Property(x => x.AlteradoPor).HasColumnName(@"AlteradoPor").IsOptional().HasColumnType("int");
        }
    }

    // ContasCorrente
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class ContasCorrenteConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ContasCorrente>
    {
        public ContasCorrenteConfiguration()
            : this("dbo")
        {
        }

        public ContasCorrenteConfiguration(string schema)
        {
            ToTable("ContasCorrente", schema);
            HasKey(x => x.ContratoContaId);

            Property(x => x.ContratoContaId).HasColumnName(@"ContratoContaID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ContratoContaNome).HasColumnName(@"ContratoContaNome").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.ContratoId).HasColumnName(@"Contrato_Id").IsOptional().HasColumnType("int");
            Property(x => x.PessoaId).HasColumnName(@"Pessoa_Id").IsOptional().HasColumnType("int");
            Property(x => x.UsuarioUsuarioId).HasColumnName(@"Usuario_UsuarioID").IsOptional().HasColumnType("int");

            // Foreign keys
            HasOptional(a => a.Contrato).WithMany(b => b.ContasCorrentes).HasForeignKey(c => c.ContratoId).WillCascadeOnDelete(false); // FK_dbo.ContasCorrente_dbo.Contratos_Contrato_Id
            HasOptional(a => a.Pontual_Pessoa).WithMany(b => b.ContasCorrentes).HasForeignKey(c => c.PessoaId).WillCascadeOnDelete(false); // FK_dbo.ContasCorrente_Pontual.Pessoas_Pessoa_Id
            HasOptional(a => a.Usuario).WithMany(b => b.ContasCorrentes).HasForeignKey(c => c.UsuarioUsuarioId).WillCascadeOnDelete(false); // FK_dbo.ContasCorrente_dbo.Usuarios_Usuario_UsuarioID
        }
    }

    // Contratos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class ContratoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Contrato>
    {
        public ContratoConfiguration()
            : this("dbo")
        {
        }

        public ContratoConfiguration(string schema)
        {
            ToTable("Contratos", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Nome).HasColumnName(@"Nome").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Ativo).HasColumnName(@"Ativo").IsRequired().HasColumnType("bit");
            Property(x => x.Data).HasColumnName(@"Data").IsOptional().HasColumnType("datetime");
            Property(x => x.AlteradoPor).HasColumnName(@"AlteradoPor").IsOptional().HasColumnType("int");
        }
    }

    // Enderecoes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class EnderecoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Endereco>
    {
        public EnderecoConfiguration()
            : this("dbo")
        {
        }

        public EnderecoConfiguration(string schema)
        {
            ToTable("Enderecoes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Bairro).HasColumnName(@"Bairro").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Logradouro).HasColumnName(@"Logradouro").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Numero).HasColumnName(@"Numero").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Comlemento).HasColumnName(@"Comlemento").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.TipoLogradouroId).HasColumnName(@"TipoLogradouroId").IsOptional().HasColumnType("int");
            Property(x => x.CepId).HasColumnName(@"CepId").IsRequired().HasColumnType("int");
            Property(x => x.PessoaId).HasColumnName(@"PessoaId").IsRequired().HasColumnType("int");
            Property(x => x.Data).HasColumnName(@"Data").IsOptional().HasColumnType("datetime");
            Property(x => x.AlteradoPor).HasColumnName(@"AlteradoPor").IsOptional().HasColumnType("int");

            // Foreign keys
            HasOptional(a => a.StatusTipos).WithMany(b => b.Enderecoes).HasForeignKey(c => c.TipoLogradouroId).WillCascadeOnDelete(false); // FK_dbo.Enderecoes_dbo.StatusTipos_TipoLogradouroId
            HasRequired(a => a.Cep).WithMany(b => b.Enderecoes).HasForeignKey(c => c.CepId); // FK_dbo.Enderecoes_dbo.Ceps_CepId
            HasRequired(a => a.Pontual_Pessoa).WithMany(b => b.Enderecoes).HasForeignKey(c => c.PessoaId); // FK_dbo.Enderecoes_Pontual.Pessoas_PessoaId
        }
    }

    // EnderecosConsolidados
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class EnderecosConsolidadoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<EnderecosConsolidado>
    {
        public EnderecosConsolidadoConfiguration()
            : this("dbo")
        {
        }

        public EnderecosConsolidadoConfiguration(string schema)
        {
            ToTable("EnderecosConsolidados", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Nome).HasColumnName(@"Nome").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Cidade).HasColumnName(@"Cidade").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Cnpj).HasColumnName(@"CNPJ").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Cpf).HasColumnName(@"CPF").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Ie).HasColumnName(@"IE").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Logradouro).HasColumnName(@"Logradouro").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Bairro).HasColumnName(@"Bairro").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Cep).HasColumnName(@"CEP").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Telefone).HasColumnName(@"Telefone").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Fax).HasColumnName(@"Fax").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Numero).HasColumnName(@"Numero").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Complemento).HasColumnName(@"Complemento").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Uf).HasColumnName(@"UF").IsOptional().HasColumnType("nvarchar(max)");
        }
    }

    // Localidades
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class LocalidadeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Localidade>
    {
        public LocalidadeConfiguration()
            : this("dbo")
        {
        }

        public LocalidadeConfiguration(string schema)
        {
            ToTable("Localidades", schema);
            HasKey(x => x.LocalidadeId);

            Property(x => x.LocalidadeId).HasColumnName(@"LocalidadeID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.CidadeNome).HasColumnName(@"CidadeNome").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Ativo).HasColumnName(@"Ativo").IsRequired().HasColumnType("bit");
            Property(x => x.FlgCapital).HasColumnName(@"FlgCapital").IsRequired().HasColumnType("bit");
            Property(x => x.FlgRegional).HasColumnName(@"FlgRegional").IsRequired().HasColumnType("bit");
            Property(x => x.KmRedespacho).HasColumnName(@"KmRedespacho").IsRequired().HasColumnType("int");
            Property(x => x.QtdPedagios).HasColumnName(@"QtdPedagios").IsRequired().HasColumnType("int");
            Property(x => x.SiglaLocalidade).HasColumnName(@"SiglaLocalidade").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.UfUfId).HasColumnName(@"Uf_UfID").IsOptional().HasColumnType("int");

            // Foreign keys
            HasOptional(a => a.Uf).WithMany(b => b.Localidades).HasForeignKey(c => c.UfUfId).WillCascadeOnDelete(false); // FK_dbo.Localidades_dbo.Ufs_Uf_UfID
            HasMany(t => t.Perfis).WithMany(t => t.Localidades).Map(m =>
            {
                m.ToTable("LocalidadePerfils", "dbo");
                m.MapLeftKey("Localidade_LocalidadeID");
                m.MapRightKey("Perfil_PerfilID");
            });
        }
    }

    // Municipios
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class MunicipioConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Municipio>
    {
        public MunicipioConfiguration()
            : this("dbo")
        {
        }

        public MunicipioConfiguration(string schema)
        {
            ToTable("Municipios", schema);
            HasKey(x => x.MunicipioId);

            Property(x => x.MunicipioId).HasColumnName(@"MunicipioID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.MunicipioNome).HasColumnName(@"MunicipioNome").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.FkUfId).HasColumnName(@"FK_UF_ID").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.Uf).WithMany(b => b.Municipios).HasForeignKey(c => c.FkUfId); // FK_dbo.Municipios_dbo.Ufs_FK_UF_ID
        }
    }

    // Perfis
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class PerfiConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Perfi>
    {
        public PerfiConfiguration()
            : this("dbo")
        {
        }

        public PerfiConfiguration(string schema)
        {
            ToTable("Perfis", schema);
            HasKey(x => x.PerfilId);

            Property(x => x.PerfilId).HasColumnName(@"PerfilID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Ativo).HasColumnName(@"Ativo").IsRequired().HasColumnType("bit");
            Property(x => x.PerfilNome).HasColumnName(@"PerfilNome").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.PerfilDescricao).HasColumnName(@"PerfilDescricao").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.PerfilTipoPerfilTipoId).HasColumnName(@"PerfilTipo_PerfilTipoID").IsOptional().HasColumnType("int");

            // Foreign keys
            HasOptional(a => a.PerfisTipo).WithMany(b => b.Perfis).HasForeignKey(c => c.PerfilTipoPerfilTipoId).WillCascadeOnDelete(false); // FK_dbo.Perfis_dbo.PerfisTipo_PerfilTipo_PerfilTipoID
        }
    }

    // PerfisTipo
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class PerfisTipoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<PerfisTipo>
    {
        public PerfisTipoConfiguration()
            : this("dbo")
        {
        }

        public PerfisTipoConfiguration(string schema)
        {
            ToTable("PerfisTipo", schema);
            HasKey(x => x.PerfilTipoId);

            Property(x => x.PerfilTipoId).HasColumnName(@"PerfilTipoID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.PerfilTipoNome).HasColumnName(@"PerfilTipoNome").IsOptional().HasColumnType("nvarchar(max)");
        }
    }

    // Pessoas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class Pontual_PessoaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Pontual_Pessoa>
    {
        public Pontual_PessoaConfiguration()
            : this("Pontual")
        {
        }

        public Pontual_PessoaConfiguration(string schema)
        {
            ToTable("Pessoas", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Nome).HasColumnName(@"Nome").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.RazaoSocial).HasColumnName(@"RazaoSocial").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Ie).HasColumnName(@"IE").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Cnpj).HasColumnName(@"CNPJ").IsOptional().HasColumnType("nvarchar").HasMaxLength(15);
            Property(x => x.Cpf).HasColumnName(@"CPF").IsOptional().HasColumnType("nvarchar").HasMaxLength(11);
            Property(x => x.TipoPessoaId).HasColumnName(@"TipoPessoaId").IsRequired().HasColumnType("int");
            Property(x => x.Data).HasColumnName(@"Data").IsOptional().HasColumnType("datetime");
            Property(x => x.AlteradoPor).HasColumnName(@"AlteradoPor").IsOptional().HasColumnType("int");
            Property(x => x.PessoaId).HasColumnName(@"Pessoa_Id").IsOptional().HasColumnType("int");

            // Foreign keys
            HasOptional(a => a.Pessoa).WithMany(b => b.Pontual_Pessoas).HasForeignKey(c => c.PessoaId).WillCascadeOnDelete(false); // FK_Pontual.Pessoas_Pontual.Pessoas_Pessoa_Id
            HasRequired(a => a.StatusTipos).WithMany(b => b.Pontual_Pessoas).HasForeignKey(c => c.TipoPessoaId); // FK_Pontual.Pessoas_dbo.StatusTipos_TipoPessoaId
        }
    }

    // SolicitacoesDeColeta
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class SolicitacoesDeColetaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SolicitacoesDeColeta>
    {
        public SolicitacoesDeColetaConfiguration()
            : this("dbo")
        {
        }

        public SolicitacoesDeColetaConfiguration(string schema)
        {
            ToTable("SolicitacoesDeColeta", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NumeroSolicitacaoColeta).HasColumnName(@"NumeroSolicitacaoColeta").IsRequired().HasColumnType("int");
            Property(x => x.PermiteAlteracao).HasColumnName(@"PermiteAlteracao").IsRequired().HasColumnType("bit");
            Property(x => x.SolicitacaoCadastradaPor).HasColumnName(@"SolicitacaoCadastradaPor").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.DataCriacao).HasColumnName(@"DataCriacao").IsRequired().HasColumnType("datetime");
            Property(x => x.AutorizadaPor).HasColumnName(@"AutorizadaPor").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.ColetadoPor).HasColumnName(@"ColetadoPor").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Data).HasColumnName(@"Data").IsOptional().HasColumnType("datetime");
            Property(x => x.AlteradoPor).HasColumnName(@"AlteradoPor").IsOptional().HasColumnType("int");
            Property(x => x.ClienteId).HasColumnName(@"Cliente_Id").IsOptional().HasColumnType("int");
            Property(x => x.ContaCorrenteContratoContaId).HasColumnName(@"ContaCorrente_ContratoContaID").IsOptional().HasColumnType("int");
            Property(x => x.EnderecoColetaId).HasColumnName(@"EnderecoColeta_Id").IsOptional().HasColumnType("int");
            Property(x => x.EnderecoRemetenteId).HasColumnName(@"EnderecoRemetente_Id").IsOptional().HasColumnType("int");
            Property(x => x.SolicitacaoStatusId).HasColumnName(@"SolicitacaoStatus_Id").IsOptional().HasColumnType("int");
            Property(x => x.TipoSolicitacaoId).HasColumnName(@"TipoSolicitacao_Id").IsOptional().HasColumnType("int");

            // Foreign keys
            HasOptional(a => a.ContasCorrente).WithMany(b => b.SolicitacoesDeColetas).HasForeignKey(c => c.ContaCorrenteContratoContaId).WillCascadeOnDelete(false); // FK_dbo.SolicitacoesDeColeta_dbo.ContasCorrente_ContaCorrente_ContratoContaID
            HasOptional(a => a.EnderecoColeta).WithMany(b => b.EnderecoColeta).HasForeignKey(c => c.EnderecoColetaId).WillCascadeOnDelete(false); // FK_dbo.SolicitacoesDeColeta_dbo.EnderecosConsolidados_EnderecoColeta_Id
            HasOptional(a => a.EnderecoRemetente).WithMany(b => b.EnderecoRemetente).HasForeignKey(c => c.EnderecoRemetenteId).WillCascadeOnDelete(false); // FK_dbo.SolicitacoesDeColeta_dbo.EnderecosConsolidados_EnderecoRemetente_Id
            HasOptional(a => a.Pontual_Pessoa).WithMany(b => b.SolicitacoesDeColetas).HasForeignKey(c => c.ClienteId).WillCascadeOnDelete(false); // FK_dbo.SolicitacoesDeColeta_Pontual.Pessoas_Cliente_Id
            HasOptional(a => a.SolicitacaoStatus).WithMany(b => b.SolicitacaoStatus).HasForeignKey(c => c.SolicitacaoStatusId).WillCascadeOnDelete(false); // FK_dbo.SolicitacoesDeColeta_dbo.StatusTipos_SolicitacaoStatus_Id
            HasOptional(a => a.TipoSolicitacao).WithMany(b => b.TipoSolicitacao).HasForeignKey(c => c.TipoSolicitacaoId).WillCascadeOnDelete(false); // FK_dbo.SolicitacoesDeColeta_dbo.StatusTipos_TipoSolicitacao_Id
        }
    }

    // StatusTipos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class StatusTiposConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<StatusTipos>
    {
        public StatusTiposConfiguration()
            : this("dbo")
        {
        }

        public StatusTiposConfiguration(string schema)
        {
            ToTable("StatusTipos", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Pai).HasColumnName(@"Pai").IsOptional().HasColumnType("int");
            Property(x => x.Descricao).HasColumnName(@"Descricao").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Ativo).HasColumnName(@"Ativo").IsRequired().HasColumnType("bit");
            Property(x => x.Data).HasColumnName(@"Data").IsOptional().HasColumnType("datetime");
            Property(x => x.AlteradoPor).HasColumnName(@"AlteradoPor").IsOptional().HasColumnType("int");

            // Foreign keys
            HasOptional(a => a.StatusTipos1).WithMany(b => b.StatusTipos2).HasForeignKey(c => c.Pai).WillCascadeOnDelete(false); // FK_dbo.StatusTipos_dbo.StatusTipos_Pai
        }
    }

    // Telefones
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class TelefoneConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Telefone>
    {
        public TelefoneConfiguration()
            : this("dbo")
        {
        }

        public TelefoneConfiguration(string schema)
        {
            ToTable("Telefones", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Ddd).HasColumnName(@"DDD").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Numero).HasColumnName(@"Numero").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.TipoTelefoneId).HasColumnName(@"TipoTelefoneId").IsOptional().HasColumnType("int");
            Property(x => x.PessoaId).HasColumnName(@"PessoaId").IsRequired().HasColumnType("int");
            Property(x => x.Data).HasColumnName(@"Data").IsOptional().HasColumnType("datetime");
            Property(x => x.AlteradoPor).HasColumnName(@"AlteradoPor").IsOptional().HasColumnType("int");

            // Foreign keys
            HasOptional(a => a.StatusTipos).WithMany(b => b.Telefones).HasForeignKey(c => c.TipoTelefoneId).WillCascadeOnDelete(false); // FK_dbo.Telefones_dbo.StatusTipos_TipoTelefoneId
            HasRequired(a => a.Pontual_Pessoa).WithMany(b => b.Telefones).HasForeignKey(c => c.PessoaId); // FK_dbo.Telefones_Pontual.Pessoas_PessoaId
        }
    }

    // TicketStatus
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class TicketStatuConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TicketStatu>
    {
        public TicketStatuConfiguration()
            : this("dbo")
        {
        }

        public TicketStatuConfiguration(string schema)
        {
            ToTable("TicketStatus", schema);
            HasKey(x => x.TicketStatusId);

            Property(x => x.TicketStatusId).HasColumnName(@"TicketStatusID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.TicketStatusNome).HasColumnName(@"TicketStatusNome").IsOptional().HasColumnType("nvarchar(max)");
        }
    }

    // TipoServicos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class TipoServicoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TipoServico>
    {
        public TipoServicoConfiguration()
            : this("dbo")
        {
        }

        public TipoServicoConfiguration(string schema)
        {
            ToTable("TipoServicos", schema);
            HasKey(x => x.TipoServicoId);

            Property(x => x.TipoServicoId).HasColumnName(@"TipoServicoID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.TipoServicoNome).HasColumnName(@"TipoServicoNome").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.TipoServicoDescricao).HasColumnName(@"TipoServicoDescricao").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.TipoServicoOrdem).HasColumnName(@"TipoServicoOrdem").IsRequired().HasColumnType("int");
        }
    }

    // Ufs
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class UfConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Uf>
    {
        public UfConfiguration()
            : this("dbo")
        {
        }

        public UfConfiguration(string schema)
        {
            ToTable("Ufs", schema);
            HasKey(x => x.UfId);

            Property(x => x.UfId).HasColumnName(@"UfID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UfNome).HasColumnName(@"UfNome").IsOptional().HasColumnType("nvarchar(max)");
        }
    }

    // Usuarios
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class UsuarioConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Usuario>
    {
        public UsuarioConfiguration()
            : this("dbo")
        {
        }

        public UsuarioConfiguration(string schema)
        {
            ToTable("Usuarios", schema);
            HasKey(x => x.UsuarioId);

            Property(x => x.UsuarioId).HasColumnName(@"UsuarioID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UsuarioLogin).HasColumnName(@"UsuarioLogin").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Senha).HasColumnName(@"Senha").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Nome).HasColumnName(@"Nome").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Email).HasColumnName(@"Email").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Celular).HasColumnName(@"Celular").IsRequired().HasColumnType("int");
            Property(x => x.Cep).HasColumnName(@"Cep").IsRequired().HasColumnType("int");
            Property(x => x.SecurityStamp).HasColumnName(@"SecurityStamp").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.EmailConfirmado).HasColumnName(@"EmailConfirmado").IsRequired().HasColumnType("bit");
            Property(x => x.Ativo).HasColumnName(@"Ativo").IsRequired().HasColumnType("bit");
            Property(x => x.PerfilPerfilId).HasColumnName(@"Perfil_PerfilID").IsOptional().HasColumnType("int");

            // Foreign keys
            HasOptional(a => a.Perfi).WithMany(b => b.Usuarios).HasForeignKey(c => c.PerfilPerfilId).WillCascadeOnDelete(false); // FK_dbo.Usuarios_dbo.Perfis_Perfil_PerfilID
        }
    }

    // UsuariosRH
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class UsuariosRhConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsuariosRh>
    {
        public UsuariosRhConfiguration()
            : this("dbo")
        {
        }

        public UsuariosRhConfiguration(string schema)
        {
            ToTable("UsuariosRH", schema);
            HasKey(x => x.UsuarioRhid);

            Property(x => x.UsuarioRhid).HasColumnName(@"UsuarioRHID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Matricula).HasColumnName(@"Matricula").IsRequired().HasColumnType("int");
            Property(x => x.Nome).HasColumnName(@"Nome").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.Email).HasColumnName(@"Email").IsOptional().HasColumnType("nvarchar(max)");
            Property(x => x.TelefonePontual).HasColumnName(@"TelefonePontual").IsRequired().HasColumnType("int");
            Property(x => x.Celular).HasColumnName(@"Celular").IsRequired().HasColumnType("int");
            Property(x => x.UsuarioStatusRhUsuarioStatusRhId).HasColumnName(@"UsuarioStatusRH_UsuarioStatusRhID").IsOptional().HasColumnType("int");

            // Foreign keys
            HasOptional(a => a.UsuariosStatusRh).WithMany(b => b.UsuariosRhs).HasForeignKey(c => c.UsuarioStatusRhUsuarioStatusRhId).WillCascadeOnDelete(false); // FK_dbo.UsuariosRH_dbo.UsuariosStatusRH_UsuarioStatusRH_UsuarioStatusRhID
        }
    }

    // UsuariosStatusRH
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class UsuariosStatusRhConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsuariosStatusRh>
    {
        public UsuariosStatusRhConfiguration()
            : this("dbo")
        {
        }

        public UsuariosStatusRhConfiguration(string schema)
        {
            ToTable("UsuariosStatusRH", schema);
            HasKey(x => x.UsuarioStatusRhId);

            Property(x => x.UsuarioStatusRhId).HasColumnName(@"UsuarioStatusRhID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UsuarioStatusRhNome).HasColumnName(@"UsuarioStatusRhNome").IsOptional().HasColumnType("nvarchar(max)");
        }
    }

    #endregion

}
// </auto-generated>

